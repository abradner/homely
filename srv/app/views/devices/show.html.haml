-#%h1 Listing Device:
-#=@device.name
-#
-#%p= @device.device_type
-#%p= @device.interface
-#%p= @device.address
-#
-#%table
-#  %tr
-#    %th Name
-#    %th Type
-#
-#  - @device.capabilities.each do |cap|
-#    %tr
-#      %td= cap.name
-#      %td= cap.capability_type

%h1
  Listing Capabilities for
  =@device.name

#device_info
%p.small 
  Type:
  = @device.device_type
%p.small
  Interface:
  = @device.interface
%p.small
  Address:
  = @device.address

#capabilities
  -if @capabilities.blank?
    %p No capabilities configured.
  -else
    %table
      %tr
        %th Name
        %th Room
        %th Type
        %th Power
        %th State
        %th Control
        -if can? :manage, @device
          %th Manage

      - @capabilities.each do |cap|
        %tr
          %td= cap.name
          %td= cap.room.name unless cap.room.blank?
          %td= cap.capability_type
          %td= link_to cap.power, device_capability_p9813_set_power_path(@device, cap)
          - if cap.capability_type.eql? "P9813"
            %td{bgcolor: "##{cap.state}"}= cap.state
          - else
            %td= cap.state

          %td
            - if cap.capability_type.eql? "P9813"
              - STOCK_COLOURS.each do |col|
                = link_to "â– ", device_capability_p9813_set_colour_path(@device, cap, value: col), style: "color: ##{col}; background: ##{background_colour(col)}"
              -# TODO This stuff HAS to go
              %form{ :action => "/devices/#{@device.id}/capabilities/#{cap.id}/p9813_set_colour", :method => "get"}
                .input-append
                  %input.input-mini{:type => "text", :name => "value", :class => "text", placeholder: "RRGGBB", maxlength: 6}
                  %button{:type => "submit", :class => "btn"}Set
          -if can? :manage, cap
            %td= link_to "Edit", edit_device_capability_path(@device,cap)

%p